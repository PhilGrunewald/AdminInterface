#!/usr/bin/env python
import MySQLdb.cursors
import numpy as np
import matplotlib.pyplot as plt

import db_ini as db     # reads the database and file path information
# override host to local
db.Host = 'localhost'

dbConnection = MySQLdb.connect(
    host=db.Host, user=db.User, passwd=db.Pass, db=db.Name, cursorclass=MySQLdb.cursors.DictCursor)
cursor = dbConnection.cursor()
cursor.execute(
    "SELECT count(*) as acts FROM Meter.Activities WHERE Meta_idMeta > 2696 GROUP BY Meta_idMeta;")
# cursor.execute("SELECT count(*) as acts FROM Meter.Activities WHERE Meta_idMeta > 1 GROUP BY Meta_idMeta;")
results = cursor.fetchall()
acts = []
for result in results:
    if(int(result['acts']) > 6):
        acts.append(int(result['acts']))

avg = sum(acts)/len(acts)
print avg

# the histogram of the data
# n, bins, patches = plt.hist(acts, 20, normed=1, facecolor='green', alpha=0.75)
# n, bins, patches =
fig, ax = plt.subplots()
plt.hist(acts, 15, range=(7, 77), normed=True, facecolor='gray', alpha=0.5)
plt.yticks(np.arange(0, 0.041, 0.01))
ax.spines['right'].set_visible(False)
ax.spines['top'].set_visible(False)
ax.xaxis.set_ticks_position('bottom')
ax.yaxis.set_ticks_position('left')
# plt.hist(acts2, 40, range=(10, 100), facecolor='green', alpha=0.5)

# add a 'best fit' line
# y = mlab.normpdf( bins, mu, sigma)
# l = plt.plot(bins, y, 'r--', linewidth=1)

plt.xlabel('Number of activities reported over 28 hours')
plt.ylabel('Probability')
# plt.title(r'$\ma thrum{Histogram\ of\ IQ:}\ \mu=100,\ igma=15$')
# plt.axis([40, 50, 0, 0.03])
# plt.grid(True)
plt.savefig("act_reported_hist.pdf", transparent=True)
plt.show()
